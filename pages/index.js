import Head from "next/head";
import NavBar from "../components/Navbar";

import { ApolloClient, InMemoryCache, gql, HttpLink } from "@apollo/client";
import { setContext } from "@apollo/client/link/context";

export default function Home({ repositories }) {
  console.log("repositories", repositories);

  return (
    <div>
      <Head>
        <title>Oko.press Task</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />
    </div>
  );
}

export const getStaticProps = async () => {
  const token = process.env.GITHUB_ACCESS_TOKEN;

  const authLink = setContext((_, { headers }) => {
    return {
      headers: {
        ...headers,
        authorization: token ? `Bearer ${token}` : null,
      },
    };
  });

  const client = new ApolloClient({
    link: authLink.concat(
      new HttpLink({ uri: "https://api.github.com/graphql" })
    ),
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      {
        viewer {
          login
        }
        user(login: "pawel-hn") {
          login
          repositories(first: 10) {
            nodes {
              name
            }
          }
        }
      }
    `,
  });

  return {
    props: {
      repositories: data,
    },
  };
};
